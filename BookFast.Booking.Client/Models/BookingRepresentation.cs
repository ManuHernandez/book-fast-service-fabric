// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace BookFast.Booking.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BookingRepresentation
    {
        /// <summary>
        /// Initializes a new instance of the BookingRepresentation class.
        /// </summary>
        public BookingRepresentation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BookingRepresentation class.
        /// </summary>
        /// <param name="id">Booking ID</param>
        /// <param name="accommodationId">Accommodation ID</param>
        /// <param name="facilityId">Facility ID</param>
        /// <param name="fromDate">Booking start date</param>
        /// <param name="toDate">Booking end date</param>
        /// <param name="accommodationName">Accommodation name</param>
        /// <param name="facilityName">Facility name</param>
        /// <param name="streetAddress">Facility street address</param>
        public BookingRepresentation(System.Guid id, int accommodationId, int facilityId, System.DateTime fromDate, System.DateTime toDate, string accommodationName = default(string), string facilityName = default(string), string streetAddress = default(string))
        {
            Id = id;
            AccommodationId = accommodationId;
            AccommodationName = accommodationName;
            FacilityId = facilityId;
            FacilityName = facilityName;
            StreetAddress = streetAddress;
            FromDate = fromDate;
            ToDate = toDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets booking ID
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets accommodation ID
        /// </summary>
        [JsonProperty(PropertyName = "accommodationId")]
        public int AccommodationId { get; set; }

        /// <summary>
        /// Gets or sets accommodation name
        /// </summary>
        [JsonProperty(PropertyName = "accommodationName")]
        public string AccommodationName { get; set; }

        /// <summary>
        /// Gets or sets facility ID
        /// </summary>
        [JsonProperty(PropertyName = "facilityId")]
        public int FacilityId { get; set; }

        /// <summary>
        /// Gets or sets facility name
        /// </summary>
        [JsonProperty(PropertyName = "facilityName")]
        public string FacilityName { get; set; }

        /// <summary>
        /// Gets or sets facility street address
        /// </summary>
        [JsonProperty(PropertyName = "streetAddress")]
        public string StreetAddress { get; set; }

        /// <summary>
        /// Gets or sets booking start date
        /// </summary>
        [JsonProperty(PropertyName = "fromDate")]
        public System.DateTime FromDate { get; set; }

        /// <summary>
        /// Gets or sets booking end date
        /// </summary>
        [JsonProperty(PropertyName = "toDate")]
        public System.DateTime ToDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
