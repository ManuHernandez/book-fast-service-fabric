// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BookFast.Facility.Client.Models
{
    using System.Linq;

    public partial class AccommodationData
    {
        /// <summary>
        /// Initializes a new instance of the AccommodationData class.
        /// </summary>
        public AccommodationData() { }

        /// <summary>
        /// Initializes a new instance of the AccommodationData class.
        /// </summary>
        /// <param name="name">Accommodation name</param>
        /// <param name="description">Accommodation description</param>
        /// <param name="roomCount">Number of rooms</param>
        /// <param name="images">Accommodation images</param>
        public AccommodationData(string name, string description = default(string), int? roomCount = default(int?), System.Collections.Generic.IList<string> images = default(System.Collections.Generic.IList<string>))
        {
            Name = name;
            Description = description;
            RoomCount = roomCount;
            Images = images;
        }

        /// <summary>
        /// Gets or sets accommodation name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets accommodation description
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets number of rooms
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "roomCount")]
        public int? RoomCount { get; set; }

        /// <summary>
        /// Gets or sets accommodation images
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "images")]
        public System.Collections.Generic.IList<string> Images { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (this.Name != null)
            {
                if (this.Name.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Name", 100);
                }
                if (this.Name.Length < 3)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Name", 3);
                }
            }
            if (this.Description != null)
            {
                if (this.Description.Length > 1000)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Description", 1000);
                }
                if (this.Description.Length < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Description", 0);
                }
            }
            if (this.RoomCount > 20)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "RoomCount", 20);
            }
            if (this.RoomCount < 0)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "RoomCount", 0);
            }
        }
    }
}
